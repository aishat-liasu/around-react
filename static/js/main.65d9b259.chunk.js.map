{"version":3,"sources":["contexts/CurrentUserContext.js","utils/api.js","components/Header.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["CurrentUserContext","createContext","api","options","this","_baseUrl","baseUrl","_headers","headers","res","ok","json","Promise","reject","status","fetch","then","_checkResponse","item","method","body","JSON","stringify","name","about","avatar","link","cardId","likeState","authorization","Header","className","Card","props","useState","isLoveButtonActive","setIsLoveButtonActive","isDeleteButtonHidden","setIsDeleteButtonHidden","_id","useContext","useEffect","cardData","owner","likes","some","onClick","onCardDelete","src","alt","onCardClick","onCardLike","length","Main","style","backgroundImage","onAvatarClick","type","onEditProfileClick","onAddPlaceClick","cards","map","onDeleteButtonClick","onDeletePlaceClick","Footer","PopupWithForm","isOpen","id","onSubmit","onClose","title","children","buttonText","ImagePopup","EditProfilePopup","onUpdateUser","setButtonText","setName","description","setDescription","currentUser","e","preventDefault","minLength","maxLength","placeholder","value","onChange","target","required","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","ref","AddPlacePopup","onAddPlaceSubmit","setLink","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setIsImagePopupOpen","isDeletePlacePopupOpen","setIsDeletePlacePopupOpen","setCurrentUser","selectedCard","setSelectedCard","setCards","cardToBeDeletedId","setCardToBeDeletedId","logError","err","console","log","closeAllPopups","handleCardDelete","deleteCard","result","filter","card","catch","getUserInfo","getInitialCards","Provider","userInfo","updateUserInfo","finally","userAvatarInfo","updateUserAvatar","placeInfo","uploadPlace","data","isLiked","i","changeCardLikeStatus","newCard","c","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65d9b259.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const CurrentUserContext = createContext();\r\n","class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Error: ${res.status}`);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  updateUserInfo(item) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: item.name,\n        about: item.about,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  updateUserAvatar(item) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: item.avatar,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  uploadPlace(item) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: item.name,\n        link: item.link,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  changeCardLikeStatus(cardId, likeState) {\n    return !likeState\n      ? fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n          method: 'PUT',\n          headers: this._headers,\n        }).then(this._checkResponse)\n      : fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n          method: 'DELETE',\n          headers: this._headers,\n        }).then(this._checkResponse);\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://around.nomoreparties.co/v1/group-11',\n  headers: {\n    authorization: '403bdafc-0a52-4e02-9b82-c7e8e4f7ffb1',\n    'Content-Type': 'application/json',\n  },\n});\n\nexport default api;\n","import React from 'react';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className='header'>\r\n      <div className='logo'></div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect, useContext } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nconst Card = (props) => {\n  const [isLoveButtonActive, setIsLoveButtonActive] = useState(false);\n  const [isDeleteButtonHidden, setIsDeleteButtonHidden] = useState(false);\n  const { _id } = useContext(CurrentUserContext);\n\n  //console.log(props.cardData);\n  useEffect(() => {\n    props.cardData.owner._id !== _id\n      ? setIsDeleteButtonHidden(true)\n      : setIsDeleteButtonHidden(false);\n\n    props.cardData.likes.some((item) => item._id === _id)\n      ? setIsLoveButtonActive(true)\n      : setIsLoveButtonActive(false);\n  }, [props, _id]);\n\n  function likeCard() {\n    props.onCardLike(props.cardData);\n  }\n\n  function removeCard() {\n    //props.onDeleteButtonClick(true);\n    props.onCardDelete(props.cardData._id);\n  }\n\n  function handleCardClick() {\n    props.onCardClick(props.cardData);\n  }\n  return (\n    <div className='place'>\n      <button\n        className={`place__delete-button ${\n          isDeleteButtonHidden ? 'hidden' : ''\n        }`}\n        onClick={removeCard}\n      ></button>\n      <img\n        src={props.cardData.link || ''}\n        alt={props.cardData.name}\n        className='place__image'\n        onClick={handleCardClick}\n      />\n      <h2 className='place__title'>{props.cardData.name || 'Title'}</h2>\n      <div className='place__love-section'>\n        <button\n          className={`place__love-button ${\n            isLoveButtonActive ? 'place__love-button_active' : ''\n          }`}\n          onClick={likeCard}\n        ></button>\n        <p className='place__love-count'>{props.cardData.likes.length}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useContext } from 'react';\r\n\r\nimport Card from './Card';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nconst Main = (props) => {\r\n  const { name, about, avatar } = useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className='main'>\r\n      <section className='profile'>\r\n        <div className='profile__content'>\r\n          <div\r\n            className='profile__avatar'\r\n            style={{ backgroundImage: `url(${avatar})` }}\r\n          >\r\n            <div\r\n              className='profile__overlay'\r\n              onClick={props.onAvatarClick}\r\n            ></div>\r\n          </div>\r\n\r\n          <div className='profile__info'>\r\n            <div className='profile__title-edit'>\r\n              <h1 className='profile__title'>{name || 'Aishat Liasu'}</h1>\r\n              <button\r\n                type='submit'\r\n                className='profile__edit-button'\r\n                onClick={props.onEditProfileClick}\r\n              ></button>\r\n            </div>\r\n            <p className='profile__subtitle'>{about || 'Software Engineer'}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <button\r\n          type='submit'\r\n          className='profile__add-button'\r\n          aria-label='add'\r\n          onClick={props.onAddPlaceClick}\r\n        ></button>\r\n      </section>\r\n      <section className='places'>\r\n        {props.cards.map((item) => {\r\n          return (\r\n            <Card\r\n              cardData={item}\r\n              key={item._id}\r\n              onCardClick={props.onCardClick}\r\n              onDeleteButtonClick={props.onDeletePlaceClick}\r\n              onCardLike={props.onCardLike}\r\n              onCardDelete={props.onDeletePlaceClick}\r\n            />\r\n          );\r\n        })}\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className='footer'>\r\n      <p className='footer__copyright'>&copy; 2021 Around the U.S</p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\n\nconst PopupWithForm = (props) => {\n  return (\n    <section\n      className={`popup popup_type_${props.name} ${\n        props.isOpen ? 'popup_opened' : ''\n      }`}\n      id={`popup_type_${props.name}`}\n    >\n      <form\n        className='popup__form'\n        id={`popup__form_type_${props.name}`}\n        onSubmit={props.onSubmit}\n      >\n        <button\n          type='reset'\n          className='popup__close-button'\n          aria-label='close'\n          onClick={props.onClose}\n        ></button>\n        <h2 className='popup__heading'>{props.title || 'Popup Title'}</h2>\n        {props.children}\n        <button type='submit' className='popup__submit-button'>\n          {props.buttonText}\n        </button>\n      </form>\n    </section>\n  );\n};\n\nexport default PopupWithForm;\n","import React from 'react';\n\nconst ImagePopup = (props) => {\n  //console.log(props.cardData);\n  return (\n    <section\n      className={`popup popup_type_image ${\n        props.isOpen ? 'popup_opened' : ''\n      } `}\n      id='popup_type_image'\n    >\n      <div className='popup__container'>\n        <button\n          type='reset'\n          className='popup__close-button'\n          aria-label='close'\n          onClick={props.onClose}\n        ></button>\n        <img\n          src={props.cardData.link || ''}\n          alt='popup'\n          className='popup__image'\n        />\n        <p className='popup__image-location'>{props.cardData.name}</p>\n      </div>\n    </section>\n  );\n};\n\nexport default ImagePopup;\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nconst EditProfilePopup = ({\r\n  isOpen,\r\n  onClose,\r\n  onUpdateUser,\r\n  buttonText,\r\n  setButtonText,\r\n}) => {\r\n  const [name, setName] = useState('Name');\r\n  const [description, setDescription] = useState('About');\r\n\r\n  // Subscription to the context\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  // After loading the current user from the API\r\n  // their data will be used in managed components.\r\n  useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser, isOpen]);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    setButtonText('Saving');\r\n    // Pass the values of the managed components to the external handler\r\n    onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title='Edit Profile'\r\n      name='edit'\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      buttonText={buttonText}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <label className='popup__label'>\r\n        <input\r\n          type='text'\r\n          id='profile-title'\r\n          name='profileName'\r\n          className='popup__field popup__field_el_title'\r\n          minLength='2'\r\n          maxLength='45'\r\n          placeholder='Name'\r\n          value={name || ''}\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n        />\r\n        <span className='popup__field-error' id='profile-title-error'></span>\r\n      </label>\r\n\r\n      <label className='popup__label'>\r\n        <input\r\n          type='text'\r\n          id='profile-subtitle'\r\n          name='profileJob'\r\n          className='popup__field popup__field_el_subtitle'\r\n          minLength='2'\r\n          maxLength='200'\r\n          placeholder='About'\r\n          value={description || ''}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          required\r\n        />\r\n        <span className='popup__field-error' id='profile-subtitle-error'></span>\r\n      </label>\r\n    </PopupWithForm>\r\n  );\r\n};\r\n\r\nexport default EditProfilePopup;\r\n","import React, { useRef } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nconst EditAvatarPopup = ({\r\n  isOpen,\r\n  onClose,\r\n  onUpdateAvatar,\r\n  buttonText,\r\n  setButtonText,\r\n}) => {\r\n  const avatarRef = useRef('');\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    setButtonText('Saving');\r\n    onUpdateAvatar({\r\n      avatar: avatarRef.current.value,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title='Update Profile Picture'\r\n      name='change'\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      buttonText={buttonText}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <label className='popup__label'>\r\n        <input\r\n          type='url'\r\n          name='profilePictureURL'\r\n          id='profile-picture-url'\r\n          className='popup__field popup__field_el_profile-picture-url'\r\n          placeholder='Image URL'\r\n          ref={avatarRef}\r\n          required\r\n        />\r\n        <span\r\n          className='popup__field-error'\r\n          id='profile-picture-url-error'\r\n        ></span>\r\n      </label>\r\n    </PopupWithForm>\r\n  );\r\n};\r\n\r\nexport default EditAvatarPopup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nconst AddPlacePopup = ({\r\n  isOpen,\r\n  onClose,\r\n  onAddPlaceSubmit,\r\n  buttonText,\r\n  setButtonText,\r\n}) => {\r\n  const [name, setName] = useState('');\r\n  const [link, setLink] = useState('');\r\n\r\n  useEffect(() => {\r\n    setName('');\r\n    setLink('');\r\n  }, [isOpen]);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    setButtonText('Saving');\r\n    onAddPlaceSubmit({\r\n      name,\r\n      link,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title='New Place'\r\n      name='add'\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      buttonText={buttonText}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <label className='popup__label'>\r\n        <input\r\n          type='text'\r\n          name='placeName'\r\n          id='place-title'\r\n          className='popup__field popup__field_el_place-title'\r\n          placeholder='Title'\r\n          minLength='1'\r\n          maxLength='30'\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n        />\r\n        <span className='popup__field-error' id='place-title-error'></span>\r\n      </label>\r\n      <label className='popup__label'>\r\n        <input\r\n          type='url'\r\n          name='placeImageURL'\r\n          id='place-image-url'\r\n          className='popup__field popup__field_el_place-image-url'\r\n          placeholder='Image URL'\r\n          value={link}\r\n          onChange={(e) => setLink(e.target.value)}\r\n          required\r\n        />\r\n        <span className='popup__field-error' id='place-image-url-error'></span>\r\n      </label>\r\n    </PopupWithForm>\r\n  );\r\n};\r\n\r\nexport default AddPlacePopup;\r\n","import React, { useEffect, useState } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\n\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [isDeletePlacePopupOpen, setIsDeletePlacePopupOpen] = useState(false);\n\n  const [currentUser, setCurrentUser] = useState({});\n  const [selectedCard, setSelectedCard] = useState({});\n  const [cards, setCards] = useState([]);\n  const [buttonText, setButtonText] = useState('Save');\n  const [cardToBeDeletedId, setCardToBeDeletedId] = useState('');\n\n  function logError(err) {\n    console.log(err);\n  }\n\n  useEffect(() => {\n    api\n      .getUserInfo()\n      .then((result) => {\n        setCurrentUser(result);\n      })\n      .catch(logError);\n  }, []);\n\n  useEffect(() => {\n    api\n      .getInitialCards()\n      .then((result) => {\n        setCards(result);\n      })\n      .catch(logError);\n  }, []);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleDeletePlaceClick(cardId) {\n    setIsDeletePlacePopupOpen(true);\n    setCardToBeDeletedId(cardId);\n  }\n\n  function handleCardClick(data) {\n    setSelectedCard(data);\n    setIsImagePopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsDeletePlacePopupOpen(false);\n    setIsImagePopupOpen(false);\n    setSelectedCard({});\n  }\n\n  function handleUpdateUser(userInfo) {\n    api\n      .updateUserInfo(userInfo)\n      .then((result) => {\n        setCurrentUser(result);\n        setIsEditProfilePopupOpen(false);\n      })\n      .catch(logError)\n      .finally(() => {\n        setButtonText('Save');\n      });\n  }\n\n  function handleUpdateAvatar(userAvatarInfo) {\n    api\n      .updateUserAvatar(userAvatarInfo)\n      .then((result) => {\n        setCurrentUser(result);\n        setIsEditAvatarPopupOpen(false);\n      })\n      .catch(logError)\n      .finally(() => {\n        setButtonText('Save');\n      });\n  }\n\n  function handleCardLike(card) {\n    // Check one more time if this card was already liked\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    // Send a request to the API and getting the updated card data\n    api\n      .changeCardLikeStatus(card._id, isLiked)\n      .then((newCard) => {\n        setCards(cards.map((c) => (c._id === card._id ? newCard : c)));\n      })\n      .catch(logError);\n  }\n\n  function handleCardDelete(cardId) {\n    api\n      .deleteCard(cardId)\n      .then((result) => {\n        setCards(cards.filter((card) => card._id !== cardId));\n      })\n      .catch(logError);\n  }\n\n  function handleAddPlaceSubmit(placeInfo) {\n    api\n      .uploadPlace(placeInfo)\n      .then((result) => {\n        setCards([result, ...cards]);\n        setIsAddPlacePopupOpen(false);\n      })\n      .catch(logError)\n      .finally(() => {\n        setButtonText('Save');\n      });\n  }\n\n  function handleDeleteConfirmation(e) {\n    e.preventDefault();\n    handleCardDelete(cardToBeDeletedId);\n    setCardToBeDeletedId('');\n    setIsDeletePlacePopupOpen(false);\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className='page'>\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n          buttonText={buttonText}\n          setButtonText={setButtonText}\n        />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          buttonText={buttonText}\n          setButtonText={setButtonText}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlaceSubmit={handleAddPlaceSubmit}\n          buttonText={buttonText}\n          setButtonText={setButtonText}\n        />\n        <PopupWithForm\n          title='Are you sure?'\n          name='confirm'\n          isOpen={isDeletePlacePopupOpen}\n          onClose={closeAllPopups}\n          buttonText='Yes'\n          onSubmit={handleDeleteConfirmation}\n        ></PopupWithForm>\n        <ImagePopup\n          cardData={selectedCard}\n          isOpen={isImagePopupOpen}\n          onClose={closeAllPopups}\n        />\n        <Header />\n        <Main\n          onEditProfileClick={handleEditProfileClick}\n          onAddPlaceClick={handleAddPlaceClick}\n          onAvatarClick={handleEditAvatarClick}\n          onCardClick={handleCardClick}\n          onDeletePlaceClick={handleDeletePlaceClick}\n          cards={cards}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n        />\n        <Footer />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}